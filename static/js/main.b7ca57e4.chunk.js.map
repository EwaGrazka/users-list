{"version":3,"sources":["SearchComponents/SearchedUsersList/SearchedusersList.tsx","SearchComponents/SearchInput/SearchInput.tsx","SearchComponents/SearchTitle/SearchTitle.tsx","Loader/Loader.jsx","MainView/MainView.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchedUsersList","searchedUsers","SearchInput","onSearch","placeholder","type","onChange","SearchTitle","title","Spinner","color","height","secondaryColor","width","MainView","useState","users","setusers","currentUsers","setcurrentUsers","useEffect","fetch","then","response","json","data","usersToRender","map","row","length","userName","className","name","username","id","e","text","target","value","usersFound","filter","user","toLowerCase","search","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAOeA,EAJmC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACnD,OAAO,6BAAKA,KCGCC,EAJuB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC9D,OAAO,uBAAOA,KAAMA,EAAMD,YAAaA,EAAaE,SAAUH,KCGjDI,EAJuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACvC,OAAO,6BAAKA,K,wBCUCC,EAXC,kBACd,8BACE,cAAC,IAAD,CACEJ,KAAK,eACLK,MAAM,qBACNC,OAAQ,IACRC,eAAe,OACfC,MAAO,SCiDEC,EApDE,WACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIR,EAASQ,QACxB,IAEHL,qBAAU,WACRD,EAAgBH,KACf,CAACA,IAEJ,IAcMU,EAAgBR,EAAaS,KAAI,SAACC,GAAD,OAASA,KAE1C3B,EACJyB,EAAcG,OAAS,EACrBH,EAAcC,KAAI,SAACG,GAAD,OAAc,+BAAsB,sBAAMC,UAAU,YAAhB,SAA6BD,EAASE,OAA5D,IAAyE,sBAAMD,UAAU,gBAAhB,oBAAqCD,EAASG,cAA9GH,EAASI,OAGlD,+DAGJ,OACE,sBAAKH,UAAU,sBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,cAAC,EAAD,CAAavB,MAAM,iBAErB,qBAAKuB,UAAU,mBAAf,SACE,cAAC,EAAD,CAAa5B,SA9BJ,SAACgC,GACd,IAAMC,EAAOD,EAAEE,OAAOC,MAClBC,EAAavB,EAEboB,IACFG,EAAavB,EAAMwB,QAAO,SAACC,GACzB,OACEA,EAAKT,KAAKU,cAAcC,OAAOP,EAAKM,gBAAkB,MAI5DvB,EAAgBoB,IAmBmBnC,YAAY,sBAAsBC,KAAK,aAExE,qBAAK0B,UAAU,0BAAf,SACoB,IAAjBf,EAAMa,OAAe,cAAC,EAAD,CAAmB5B,cAAeA,IAAoB,cAAC,EAAD,UC3CrE2C,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCMSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b7ca57e4.chunk.js","sourcesContent":["import { FC } from \"react\";\r\nimport { ISearchedUsersList } from \"../../Interfaces/searchRelatedInterfaces\";\r\n\r\nconst SearchedUsersList: FC<ISearchedUsersList> = ({ searchedUsers }) => {\r\n  return <ol>{searchedUsers}</ol>;\r\n};\r\n\r\nexport default SearchedUsersList;\r\n","import { FC } from \"react\";\r\nimport { ISearchInput } from \"../../Interfaces/searchRelatedInterfaces\";\r\n\r\nconst SearchInput: FC<ISearchInput> = ({ onSearch, placeholder, type }) => {\r\n  return <input type={type} placeholder={placeholder} onChange={onSearch} />;\r\n};\r\n\r\nexport default SearchInput;\r\n","import { FC } from \"react\";\r\nimport { ISearchTitle } from \"../../Interfaces/searchRelatedInterfaces\";\r\n\r\nconst SearchTitle: FC<ISearchTitle> = ({ title }) => {\r\n  return <h1>{title}</h1>;\r\n};\r\n\r\nexport default SearchTitle;\r\n","\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Spinner = () => (\r\n  <div>\r\n    <Loader\r\n      type='MutatingDots'\r\n      color='rgb(172, 170, 170)'\r\n      height={100}\r\n      secondaryColor='#000'\r\n      width={100}\r\n    />\r\n  </div>\r\n);\r\nexport default Spinner;\r\n","import React, { useEffect, useState } from 'react';\r\nimport SearchedUsersList from '../SearchComponents/SearchedUsersList/SearchedusersList';\r\nimport SearchInput from '../SearchComponents/SearchInput/SearchInput';\r\nimport SearchTitle from '../SearchComponents/SearchTitle/SearchTitle';\r\nimport './MainView.scss';\r\nimport Spinner from '../Loader/Loader';\r\n\r\nconst MainView = () => {\r\n  const [users, setusers] = useState([])\r\n  const [currentUsers, setcurrentUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(data => setusers(data))\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setcurrentUsers(users)\r\n  }, [users]);\r\n\r\n  const search = (e) => {\r\n    const text = e.target.value;\r\n    let usersFound = users;\r\n\r\n    if (text) {\r\n      usersFound = users.filter((user) => {\r\n        return (\r\n          user.name.toLowerCase().search(text.toLowerCase()) > -1\r\n        );\r\n      });\r\n    }\r\n    setcurrentUsers(usersFound);\r\n  };\r\n\r\n  const usersToRender = currentUsers.map((row) => row)\r\n\r\n  const searchedUsers =\r\n    usersToRender.length > 0 ? (\r\n      usersToRender.map((userName) => <li key={userName.id}><span className=\"user-name\">{userName.name}</span> <span className=\"user-username\">{`@${userName.username}`}</span></li>)\r\n\r\n    ) : (\r\n      <p>No results. Please, try again.</p>\r\n    );\r\n\r\n  return (\r\n    <div className=\"main-view-container\">\r\n      <div className=\"search-title-box\">\r\n        <SearchTitle title=\"Users list\" />\r\n      </div>\r\n      <div className=\"search-input-box\">\r\n        <SearchInput onSearch={search} placeholder=\"Search by user name\" type=\"search\" />\r\n      </div>\r\n      <div className=\"searched-users-list-box\">\r\n        {users.length !== 0 ? <SearchedUsersList searchedUsers={searchedUsers} /> : <Spinner />}</div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MainView;","import \"./App.css\";\nimport MainView from \"./MainView/MainView\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainView />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}